name: Release Dash Evo Tool

on:
  push:
    tags:
      - 'v*'
      - 'v*-dev.*'
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      tag:
        description: "Version (i.e. v0.1.0)"
        required: true

jobs:
  build-and-release:
    name: Build and Release Dash Evo Tool
    strategy:
      matrix:
        include:
          - name: "linux-amd64"
            runs-on: "ubuntu-20.04"
            target: "x86_64-unknown-linux-gnu"
            platform: "amd64-linux"
#          - name: "linux-arm64"
#            runs-on: "ubuntu-20.04"
#            target: "aarch64-unknown-linux-gnu"
#            platform: "arm64-linux"
          - name: "macos-amd64"
            runs-on: "macos-13"
            target: "x86_64-apple-darwin"
            platform: "amd64-mac"
          - name: "macos-arm64"
            runs-on: "macos-latest"
            target: "aarch64-apple-darwin"
            platform: "arm64-mac"
          - name: "Windows"
            runs-on: "ubuntu-20.04"
            target: "x86_64-pc-windows-gnu"
            platform: "windows"
            ext: ".exe"

    runs-on: ${{ matrix.runs-on }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup prerequisites
        run: |
          mkdir -p release/${{ matrix.platform }}
          cp .env.example release/${{ matrix.platform }}/.env
          cp -r dash_core_configs/ release/${{ matrix.platform }}/dash_core_configs

      - name: Build project
        run: |
          cargo build --release --target ${{ matrix.target }}
          mv target/${{ matrix.target }}/release/dash-evo-tool${{ matrix.ext }} release/${{ matrix.platform }}/dash-evo-tool-${{ matrix.platform }}

      - name: Package release
        run: |
          zip -r dash-evo-tool-${{ matrix.platform }}.zip release/${{ matrix.platform }}/

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: dash-evo-tool-${{ matrix.platform }}.zip
          path: dash-evo-tool-${{ matrix.platform }}.zip

  release:
    name: Create GitHub Release
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./zipped/

      - name: Publish release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          files: |
            ./zipped/dash-evo-tool-amd64-linux.zip
            ./zipped/dash-evo-tool-arm64-linux.zip
            ./zipped/dash-evo-tool-amd64-mac.zip
            ./zipped/dash-evo-tool-arm64-mac.zip
            ./zipped/dash-evo-tool-windows.zip
          draft: false
          prerelease: true